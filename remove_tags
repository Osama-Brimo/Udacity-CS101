# Question 4: Remove Tags

# When we add our words to the index, we don't really want to include
# html tags such as <body>, <head>, <table>, <a href="..."> and so on.

# Write a procedure, remove_tags, that takes as input a string and returns
# a list of words, in order, with the tags removed. Tags are defined to be
# strings surrounded by < >. Words are separated by whitespace or tags. 
# You may assume the input does not include any unclosed tags, that is,  
# there will be no '<' without a following '>'.

def remove_tags1(string):
    result=''
    if string.find('<')==-1:
        return string.split()
    while string.find('<')!=-1:
        result+=string[:string.find('<')]+' '
        string=string[string.find('>')+1:]
        if string.find('>')==-1 and len(string)>0:
            result+=string
    return result.split()    
    
def remove_tags(string):
    result=''
    while string.find('<')!=-1:
        for x in string:
            if x=='>':
                string=string[string.find(x)+1:]
                if string.find(x)==-1:
                    result+=string
                    break
            if x =='<':
                result+=string[:string.find(x)]+' '
    if not result:
        return string.split()
    return result.split()    
        
    
    
    
        
        


print remove_tags('''<h1>Title</h1><p>This is a
                    <a href="http://www.udacity.com">link</a>.<p>''')
#>>> ['Title','This','is','a','link','.']

print remove_tags('''<table cellpadding='3'>
                     <tr><td>Hello</td><td>World!</td></tr>
                     </table>''')
#>>> ['Hello','World!']

print remove_tags('This sentence has no tags.')
#>>> []

print remove_tags("'<br />This line starts with a tag'")
#>>> ['This', 'is', 'plain', 'text.']
